#############################################################################
# Makefile for building: xound
# Generated by qmake (2.01a) (Qt 4.8.1) on: Fri Sep 14 22:06:07 2012
# Project:  Xound.pro
# Template: app
# Command: /usr/bin/qmake -spec /usr/share/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile Xound.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_PHONON_LIB -DQT_DBUS_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtDBus -I/usr/include/phonon -I/usr/include/qt4 -Ilibs/qtsingleapplication/src -I/usr/include/qt4/phonon_compat -Iobj
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -ltag -lffmpegthumbnailer -lphonon -lQtDBus -lQtXml -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = obj/

####### Files

SOURCES       = libs/qtsingleapplication/src/qtsingleapplication.cpp \
		libs/qtsingleapplication/src/qtlocalpeer.cpp \
		main.cpp \
		gui/mainwindow.cpp \
		gui/musiccontrol.cpp \
		global/core.cpp \
		global/artist.cpp \
		global/album.cpp \
		global/playlist.cpp \
		global/music.cpp \
		global/mprismanager.cpp \
		gui/video.cpp \
		gui/workzone.cpp \
		gui/artistwidget.cpp \
		gui/playlistwidget.cpp \
		gui/cover.cpp \
		gui/musiclibrary.cpp \
		gui/musicnote.cpp \
		global/infothread.cpp \
		gui/videolibrary.cpp obj/moc_qtsingleapplication.cpp \
		obj/moc_qtlocalpeer.cpp \
		obj/moc_mainwindow.cpp \
		obj/moc_core.cpp \
		obj/moc_artist.cpp \
		obj/moc_album.cpp \
		obj/moc_playlist.cpp \
		obj/moc_musiccontrol.cpp \
		obj/moc_music.cpp \
		obj/moc_video.cpp \
		obj/moc_contentplugin.cpp \
		obj/moc_workzone.cpp \
		obj/moc_artistwidget.cpp \
		obj/moc_playlistwidget.cpp \
		obj/moc_cover.cpp \
		obj/moc_musiclibrary.cpp \
		obj/moc_mprismanager.cpp \
		obj/moc_musicnote.cpp \
		obj/moc_infothread.cpp \
		obj/moc_videolibrary.cpp \
		qrc_ressource.cpp
OBJECTS       = obj/qtsingleapplication.o \
		obj/qtlocalpeer.o \
		obj/main.o \
		obj/mainwindow.o \
		obj/musiccontrol.o \
		obj/core.o \
		obj/artist.o \
		obj/album.o \
		obj/playlist.o \
		obj/music.o \
		obj/mprismanager.o \
		obj/video.o \
		obj/workzone.o \
		obj/artistwidget.o \
		obj/playlistwidget.o \
		obj/cover.o \
		obj/musiclibrary.o \
		obj/musicnote.o \
		obj/infothread.o \
		obj/videolibrary.o \
		obj/moc_qtsingleapplication.o \
		obj/moc_qtlocalpeer.o \
		obj/moc_mainwindow.o \
		obj/moc_core.o \
		obj/moc_artist.o \
		obj/moc_album.o \
		obj/moc_playlist.o \
		obj/moc_musiccontrol.o \
		obj/moc_music.o \
		obj/moc_video.o \
		obj/moc_contentplugin.o \
		obj/moc_workzone.o \
		obj/moc_artistwidget.o \
		obj/moc_playlistwidget.o \
		obj/moc_cover.o \
		obj/moc_musiclibrary.o \
		obj/moc_mprismanager.o \
		obj/moc_musicnote.o \
		obj/moc_infothread.o \
		obj/moc_videolibrary.o \
		obj/qrc_ressource.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		libs/qtsingleapplication/common.pri \
		libs/qtsingleapplication/src/qtsingleapplication.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/dbusinterfaces.prf \
		/usr/share/qt4/mkspecs/features/dbusadaptors.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Xound.pro
QMAKE_TARGET  = xound
DESTDIR       = 
TARGET        = xound

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Xound.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		libs/qtsingleapplication/common.pri \
		libs/qtsingleapplication/src/qtsingleapplication.pri \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/dbusinterfaces.prf \
		/usr/share/qt4/mkspecs/features/dbusadaptors.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtDBus.prl \
		/usr/lib/x86_64-linux-gnu/libQtXml.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile Xound.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
libs/qtsingleapplication/common.pri:
libs/qtsingleapplication/src/qtsingleapplication.pri:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/dbusinterfaces.prf:
/usr/share/qt4/mkspecs/features/dbusadaptors.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtDBus.prl:
/usr/lib/x86_64-linux-gnu/libQtXml.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ QMLJSDEBUGGER_PATH=/usr/share/qtcreator/qml/qmljsdebugger -o Makefile Xound.pro

dist: 
	@$(CHK_DIR_EXISTS) obj/xound1.0.0 || $(MKDIR) obj/xound1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) obj/xound1.0.0/ && $(COPY_FILE) --parents libs/qtsingleapplication/src/qtsingleapplication.h libs/qtsingleapplication/src/qtlocalpeer.h include/mainwindow.h include/core.h include/artist.h include/album.h include/playlist.h include/musiccontrol.h include/music.h include/video.h include/contentplugin.h include/workzone.h include/artistwidget.h include/playlistwidget.h include/cover.h include/musiclibrary.h include/mprismanager.h include/musicnote.h include/infothread.h include/videolibrary.h obj/xound1.0.0/ && $(COPY_FILE) --parents images/ressource.qrc obj/xound1.0.0/ && $(COPY_FILE) --parents libs/qtsingleapplication/src/qtsingleapplication.cpp libs/qtsingleapplication/src/qtlocalpeer.cpp main.cpp gui/mainwindow.cpp gui/musiccontrol.cpp global/core.cpp global/artist.cpp global/album.cpp global/playlist.cpp global/music.cpp global/mprismanager.cpp gui/video.cpp gui/workzone.cpp gui/artistwidget.cpp gui/playlistwidget.cpp gui/cover.cpp gui/musiclibrary.cpp gui/musicnote.cpp global/infothread.cpp gui/videolibrary.cpp obj/xound1.0.0/ && $(COPY_FILE) --parents translations/Xound_fr.ts obj/xound1.0.0/ && (cd `dirname obj/xound1.0.0` && $(TAR) xound1.0.0.tar xound1.0.0 && $(COMPRESS) xound1.0.0.tar) && $(MOVE) `dirname obj/xound1.0.0`/xound1.0.0.tar.gz . && $(DEL_FILE) -r obj/xound1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: obj/moc_qtsingleapplication.cpp obj/moc_qtlocalpeer.cpp obj/moc_mainwindow.cpp obj/moc_core.cpp obj/moc_artist.cpp obj/moc_album.cpp obj/moc_playlist.cpp obj/moc_musiccontrol.cpp obj/moc_music.cpp obj/moc_video.cpp obj/moc_contentplugin.cpp obj/moc_workzone.cpp obj/moc_artistwidget.cpp obj/moc_playlistwidget.cpp obj/moc_cover.cpp obj/moc_musiclibrary.cpp obj/moc_mprismanager.cpp obj/moc_musicnote.cpp obj/moc_infothread.cpp obj/moc_videolibrary.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) obj/moc_qtsingleapplication.cpp obj/moc_qtlocalpeer.cpp obj/moc_mainwindow.cpp obj/moc_core.cpp obj/moc_artist.cpp obj/moc_album.cpp obj/moc_playlist.cpp obj/moc_musiccontrol.cpp obj/moc_music.cpp obj/moc_video.cpp obj/moc_contentplugin.cpp obj/moc_workzone.cpp obj/moc_artistwidget.cpp obj/moc_playlistwidget.cpp obj/moc_cover.cpp obj/moc_musiclibrary.cpp obj/moc_mprismanager.cpp obj/moc_musicnote.cpp obj/moc_infothread.cpp obj/moc_videolibrary.cpp
obj/moc_qtsingleapplication.cpp: libs/qtsingleapplication/src/qtsingleapplication.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) libs/qtsingleapplication/src/qtsingleapplication.h -o obj/moc_qtsingleapplication.cpp

obj/moc_qtlocalpeer.cpp: libs/qtsingleapplication/src/qtlockedfile.h \
		libs/qtsingleapplication/src/qtlocalpeer.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) libs/qtsingleapplication/src/qtlocalpeer.h -o obj/moc_qtlocalpeer.cpp

obj/moc_mainwindow.cpp: include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/musiccontrol.h \
		include/cover.h \
		include/workzone.h \
		include/playlistwidget.h \
		include/musicnote.h \
		include/musiclibrary.h \
		include/artistwidget.h \
		include/videolibrary.h \
		include/video.h \
		include/mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/mainwindow.h -o obj/moc_mainwindow.cpp

obj/moc_core.cpp: include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/core.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/core.h -o obj/moc_core.cpp

obj/moc_artist.cpp: include/artist.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/artist.h -o obj/moc_artist.cpp

obj/moc_album.cpp: include/artist.h \
		include/album.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/album.h -o obj/moc_album.cpp

obj/moc_playlist.cpp: include/music.h \
		include/artist.h \
		include/album.h \
		include/playlist.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/playlist.h -o obj/moc_playlist.cpp

obj/moc_musiccontrol.cpp: include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/cover.h \
		include/musiccontrol.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/musiccontrol.h -o obj/moc_musiccontrol.cpp

obj/moc_music.cpp: include/artist.h \
		include/album.h \
		include/music.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/music.h -o obj/moc_music.cpp

obj/moc_video.cpp: include/playlist.h \
		include/music.h \
		include/artist.h \
		include/album.h \
		include/musiccontrol.h \
		include/core.h \
		include/contentplugin.h \
		include/infothread.h \
		include/cover.h \
		include/video.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/video.h -o obj/moc_video.cpp

obj/moc_contentplugin.cpp: include/contentplugin.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/contentplugin.h -o obj/moc_contentplugin.cpp

obj/moc_workzone.cpp: include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/playlistwidget.h \
		include/musicnote.h \
		include/musiclibrary.h \
		include/artistwidget.h \
		include/videolibrary.h \
		include/workzone.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/workzone.h -o obj/moc_workzone.cpp

obj/moc_artistwidget.cpp: include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/artistwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/artistwidget.h -o obj/moc_artistwidget.cpp

obj/moc_playlistwidget.cpp: include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/musicnote.h \
		include/playlistwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/playlistwidget.h -o obj/moc_playlistwidget.cpp

obj/moc_cover.cpp: include/music.h \
		include/artist.h \
		include/album.h \
		include/cover.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/cover.h -o obj/moc_cover.cpp

obj/moc_musiclibrary.cpp: include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/artistwidget.h \
		include/musiclibrary.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/musiclibrary.h -o obj/moc_musiclibrary.cpp

obj/moc_mprismanager.cpp: include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/mprismanager.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/mprismanager.h -o obj/moc_mprismanager.cpp

obj/moc_musicnote.cpp: include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/musicnote.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/musicnote.h -o obj/moc_musicnote.cpp

obj/moc_infothread.cpp: include/artist.h \
		include/infothread.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/infothread.h -o obj/moc_infothread.cpp

obj/moc_videolibrary.cpp: include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/videolibrary.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) include/videolibrary.h -o obj/moc_videolibrary.cpp

compiler_dbus_interface_source_make_all:
compiler_dbus_interface_source_clean:
compiler_dbus_adaptor_source_make_all:
compiler_dbus_adaptor_source_clean:
compiler_rcc_make_all: qrc_ressource.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_ressource.cpp
qrc_ressource.cpp: images/ressource.qrc \
		images/Branch_Closed.png \
		images/Repeat.png \
		images/Music.png \
		images/Systray_Icon_Play30.png \
		images/Add_Folder.png \
		images/Systray_Icon_Play100.png \
		images/Playlist_Icon.png \
		images/Icon.png \
		images/Systray_Icon_Play20.png \
		images/Player_Pause.png \
		images/Default_Cover.png \
		images/Add_From_Network.png \
		images/Open_Playlist.png \
		images/Fullscreen.png \
		images/Systray_Icon_Play50.png \
		images/Artist.png \
		images/Branch_Open.png \
		images/Player_Next.png \
		images/Systray_Icon_Play40.png \
		images/Systray_Icon_Play.png \
		images/Systray_Icon_Play70.png \
		images/Volume.png \
		images/Random.png \
		images/Systray_Player_Play.png \
		images/Save_Playlist.png \
		images/Volume_Mute.png \
		images/Player_Previous.png \
		images/Systray_Icon_Play60.png \
		images/Player_Play.png \
		images/Systray_Icon_Play90.png \
		images/Add.png \
		images/Systray_Icon_Play10.png \
		images/Remove_Double.png \
		images/Video.png \
		images/Systray_Icon_Play80.png \
		images/Systray_Close.png \
		images/Remove.png \
		images/Systray_Player_Pause.png \
		images/Systray_Maximize.png
	/usr/bin/rcc -name ressource images/ressource.qrc -o qrc_ressource.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_dbus_interface_header_make_all:
compiler_dbus_interface_header_clean:
compiler_dbus_interface_moc_make_all:
compiler_dbus_interface_moc_clean:
compiler_dbus_adaptor_header_make_all:
compiler_dbus_adaptor_header_clean:
compiler_dbus_adaptor_moc_make_all:
compiler_dbus_adaptor_moc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

obj/qtsingleapplication.o: libs/qtsingleapplication/src/qtsingleapplication.cpp libs/qtsingleapplication/src/qtsingleapplication.h \
		libs/qtsingleapplication/src/qtlocalpeer.h \
		libs/qtsingleapplication/src/qtlockedfile.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/qtsingleapplication.o libs/qtsingleapplication/src/qtsingleapplication.cpp

obj/qtlocalpeer.o: libs/qtsingleapplication/src/qtlocalpeer.cpp libs/qtsingleapplication/src/qtlocalpeer.h \
		libs/qtsingleapplication/src/qtlockedfile.h \
		libs/qtsingleapplication/src/qtlockedfile.cpp \
		libs/qtsingleapplication/src/qtlockedfile_win.cpp \
		libs/qtsingleapplication/src/qtlockedfile_unix.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/qtlocalpeer.o libs/qtsingleapplication/src/qtlocalpeer.cpp

obj/main.o: main.cpp libs/qtsingleapplication/src/QtSingleApplication \
		libs/qtsingleapplication/src/qtsingleapplication.h \
		include/mainwindow.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/musiccontrol.h \
		include/cover.h \
		include/workzone.h \
		include/playlistwidget.h \
		include/musicnote.h \
		include/musiclibrary.h \
		include/artistwidget.h \
		include/videolibrary.h \
		include/video.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/main.o main.cpp

obj/mainwindow.o: gui/mainwindow.cpp include/mainwindow.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/musiccontrol.h \
		include/cover.h \
		include/workzone.h \
		include/playlistwidget.h \
		include/musicnote.h \
		include/musiclibrary.h \
		include/artistwidget.h \
		include/videolibrary.h \
		include/video.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/mainwindow.o gui/mainwindow.cpp

obj/musiccontrol.o: gui/musiccontrol.cpp include/musiccontrol.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/cover.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/musiccontrol.o gui/musiccontrol.cpp

obj/core.o: global/core.cpp include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/core.o global/core.cpp

obj/artist.o: global/artist.cpp include/artist.h \
		include/album.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/artist.o global/artist.cpp

obj/album.o: global/album.cpp include/album.h \
		include/artist.h \
		include/music.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/album.o global/album.cpp

obj/playlist.o: global/playlist.cpp include/playlist.h \
		include/music.h \
		include/artist.h \
		include/album.h \
		include/core.h \
		include/contentplugin.h \
		include/infothread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/playlist.o global/playlist.cpp

obj/music.o: global/music.cpp include/music.h \
		include/artist.h \
		include/album.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/music.o global/music.cpp

obj/mprismanager.o: global/mprismanager.cpp include/mprismanager.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/mprismanager.o global/mprismanager.cpp

obj/video.o: gui/video.cpp include/video.h \
		include/playlist.h \
		include/music.h \
		include/artist.h \
		include/album.h \
		include/musiccontrol.h \
		include/core.h \
		include/contentplugin.h \
		include/infothread.h \
		include/cover.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/video.o gui/video.cpp

obj/workzone.o: gui/workzone.cpp include/workzone.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/playlistwidget.h \
		include/musicnote.h \
		include/musiclibrary.h \
		include/artistwidget.h \
		include/videolibrary.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/workzone.o gui/workzone.cpp

obj/artistwidget.o: gui/artistwidget.cpp include/artistwidget.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/artistwidget.o gui/artistwidget.cpp

obj/playlistwidget.o: gui/playlistwidget.cpp include/playlistwidget.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/musicnote.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/playlistwidget.o gui/playlistwidget.cpp

obj/cover.o: gui/cover.cpp include/cover.h \
		include/music.h \
		include/artist.h \
		include/album.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/cover.o gui/cover.cpp

obj/musiclibrary.o: gui/musiclibrary.cpp include/musiclibrary.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h \
		include/artistwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/musiclibrary.o gui/musiclibrary.cpp

obj/musicnote.o: gui/musicnote.cpp include/musicnote.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/musicnote.o gui/musicnote.cpp

obj/infothread.o: global/infothread.cpp include/infothread.h \
		include/artist.h \
		include/core.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/infothread.o global/infothread.cpp

obj/videolibrary.o: gui/videolibrary.cpp include/videolibrary.h \
		include/core.h \
		include/artist.h \
		include/album.h \
		include/music.h \
		include/playlist.h \
		include/contentplugin.h \
		include/infothread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/videolibrary.o gui/videolibrary.cpp

obj/moc_qtsingleapplication.o: obj/moc_qtsingleapplication.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_qtsingleapplication.o obj/moc_qtsingleapplication.cpp

obj/moc_qtlocalpeer.o: obj/moc_qtlocalpeer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_qtlocalpeer.o obj/moc_qtlocalpeer.cpp

obj/moc_mainwindow.o: obj/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_mainwindow.o obj/moc_mainwindow.cpp

obj/moc_core.o: obj/moc_core.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_core.o obj/moc_core.cpp

obj/moc_artist.o: obj/moc_artist.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_artist.o obj/moc_artist.cpp

obj/moc_album.o: obj/moc_album.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_album.o obj/moc_album.cpp

obj/moc_playlist.o: obj/moc_playlist.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_playlist.o obj/moc_playlist.cpp

obj/moc_musiccontrol.o: obj/moc_musiccontrol.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_musiccontrol.o obj/moc_musiccontrol.cpp

obj/moc_music.o: obj/moc_music.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_music.o obj/moc_music.cpp

obj/moc_video.o: obj/moc_video.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_video.o obj/moc_video.cpp

obj/moc_contentplugin.o: obj/moc_contentplugin.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_contentplugin.o obj/moc_contentplugin.cpp

obj/moc_workzone.o: obj/moc_workzone.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_workzone.o obj/moc_workzone.cpp

obj/moc_artistwidget.o: obj/moc_artistwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_artistwidget.o obj/moc_artistwidget.cpp

obj/moc_playlistwidget.o: obj/moc_playlistwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_playlistwidget.o obj/moc_playlistwidget.cpp

obj/moc_cover.o: obj/moc_cover.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_cover.o obj/moc_cover.cpp

obj/moc_musiclibrary.o: obj/moc_musiclibrary.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_musiclibrary.o obj/moc_musiclibrary.cpp

obj/moc_mprismanager.o: obj/moc_mprismanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_mprismanager.o obj/moc_mprismanager.cpp

obj/moc_musicnote.o: obj/moc_musicnote.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_musicnote.o obj/moc_musicnote.cpp

obj/moc_infothread.o: obj/moc_infothread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_infothread.o obj/moc_infothread.cpp

obj/moc_videolibrary.o: obj/moc_videolibrary.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/moc_videolibrary.o obj/moc_videolibrary.cpp

obj/qrc_ressource.o: qrc_ressource.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o obj/qrc_ressource.o qrc_ressource.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/bin/ || $(MKDIR) $(INSTALL_ROOT)/usr/bin/ 
	-$(INSTALL_PROGRAM) "$(QMAKE_TARGET)" "$(INSTALL_ROOT)/usr/bin/$(QMAKE_TARGET)"
	-$(STRIP) "$(INSTALL_ROOT)/usr/bin/$(QMAKE_TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/usr/bin/$(QMAKE_TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/bin/ 


install_desktop: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/usr/share/applications/ || $(MKDIR) $(INSTALL_ROOT)/usr/share/applications/ 
	-$(INSTALL_FILE) /home/kido/Dropbox/Programmation/nebulae/applications/xound/Xound.desktop $(INSTALL_ROOT)/usr/share/applications/


uninstall_desktop:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/usr/share/applications/Xound.desktop
	-$(DEL_DIR) $(INSTALL_ROOT)/usr/share/applications/ 


install:  install_target install_desktop  FORCE

uninstall: uninstall_target uninstall_desktop   FORCE

FORCE:

